/*
 * This Java source file was generated by the Gradle 'init' task.
 */
package test3;


import org.junit.After;
import org.junit.Assert;
import org.junit.Before;
import org.junit.Test;
import static org.junit.Assert.*;
import static org.hamcrest.MatcherAssert.assertThat;
import static org.hamcrest.MatcherAssert.*;
import static org.hamcrest.Matchers.equalTo;
import java.util.ArrayList;
import java.util.List;
import java.io.File;
import java.io.IOException;
public class DictionaryTest {
//Il faut competer
    private Dictionary dict;
    @Before
    public void initialize(){
        dict = new Dictionary("Example");
        List<String> tradu_chat = new ArrayList<>();
        tradu_chat.add("cat");
        tradu_chat.add("cat1");
        tradu_chat.add("cat2");
        dict.addtraduction_key("chat", tradu_chat);
        List<String> tradu_chien = new ArrayList<>();
        tradu_chien.add("dog");
        tradu_chien.add("dog1");
        tradu_chien.add("dog2");
        dict.addtraduction_key("chien", tradu_chien);

    }
    
    @Test public void Isempty(){
        assertNotNull("Pas de traduction",dict.getMultipleTranslations("chat"));
    }
    @Test public void testDictionaryName(){
        System.out.println(dict.getName());
        assertThat(dict.getName(),equalTo("Example"));
    }
   @Test public void testTraduction(){
    List<String> tradu_chat = new ArrayList<>();
    tradu_chat.add("cat");
    tradu_chat.add("cat1");
    tradu_chat.add("cat2");
        assertThat(dict.getMultipleTranslations("chat"),equalTo(tradu_chat));
    }
    @Test public void testInverse(){
        assertThat(dict.getInverse("cat1"),equalTo("chat"));
    }
    @Test public void testWrite(){
        File file = new File("test.txt");
        try{
            dict.WriterTraduction();
        }catch(IOException e){
            System.out.println(e);
        }
        assertNotNull("Pas de traduction",file.exists());

    }
}
